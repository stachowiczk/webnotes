version: '3.1'

services:
  webserver:
    build: 
      context: ./client
      dockerfile: Dockerfile

    image: cookiechomper/webserver:latest
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - server
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  client:
    build: ./client
    image: cookiechomper/client:latest
    depends_on:
      - webserver

    

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    image: cookiechomper/server:latest
    ports:
      - "5000:5000"
    volumes:
      - db_data:/app/instance
      - ./server/migrations:/app/server/migrations
      - ./certbot/conf:/etc/nginx/ssl/:ro
    environment:
      - FLASK_APP=./server/app.py
      - FLASK_RUN_HOST=0.0.0.0
      - SQLALCHEMY_DATABASE_URI=sqlite:////app/instance/db.db
      - SQLALCHEMY_TRACK_MODIFICATIONS=false
    env_file:


      - ./server/env.list

    command: /bin/bash -c "python -m flask db upgrade &&  python -m gunicorn --chdir=./server --bind 0.0.0.0:5000 --workers 4 --threads 2 --timeout 0 --certfile /etc/nginx/ssl/live/mywebnotes.me/fullchain.pem --keyfile /etc/nginx/ssl/live/mywebnotes.me/privkey.pem app:app"
    networks:
      - app_network
volumes: 
  db_data:

networks:
  app_network: